{"version":3,"sources":["app/app.js","app/config/config.js","app/initialize.js"],"names":["axios","require","module","exports","Config","_webstandards","_YqlAPI","prototype","getLink","getDataFromURL","url","Promise","resolve","reject","yqlQuery","proxy_url","encodeURIComponent","get","then","res","data","query","results","item","catch","err","wut","document","addEventListener","currentPodcast","localStorage","getItem","console","log","html","length","i","current","enclosure","body","innerHTML","alert","event","target","nodeName","preventDefault","setItem","href"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;;;;;;ACVA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;;AAEAC,OAAOC,OAAP,GAAiB,IAAIC,MAAJ,EAAjB;;AAEA,SAASA,MAAT,GAAkB;AAChB,OAAKC,aAAL,GAAqB,yEAArB;AACA,OAAKC,OAAL,GAAe,8CAAf;AACD;;AAEDF,OAAOG,SAAP,CAAiBC,OAAjB,GAA2B,YAAW;AACpC,SAAO,KAAKH,aAAZ;AACD,CAFD;;AAIAD,OAAOG,SAAP,CAAiBE,cAAjB,GAAkC,UAASC,GAAT,EAAc;AAAA;;AAC9C,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIC,qDAAmDJ,GAAnD,MAAJ;AACA,QAAIK,iBAAe,MAAKT,OAApB,GAA8BU,mBAAmBF,QAAnB,CAA9B,6CAAJ;;AAEAd,UAAMiB,GAAN,CAAUF,SAAV,EACCG,IADD,CACM,UAACC,GAAD,EAAS;AACbP,cAAQO,IAAIC,IAAJ,CAASC,KAAT,CAAeC,OAAf,CAAuBC,IAA/B;AACD,KAHD,EAICC,KAJD,CAIO,UAACC,GAAD,EAAS;AACdZ,aAAOY,GAAP;AACD,KAND;AAOD,GAXM,CAAP;AAYD,CAbD;;;;;;ACbA,IAAIC,MAAMzB,QAAQ,iBAAR,CAAV;;AAEA0B,SAASC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClD,MAAIC,iBAAiBC,aAAaC,OAAb,CAAqB,SAArB,KAAmC,IAAxD;;AAEAC,UAAQC,GAAR,CAAY,iBAAZ;;AAEAP,MAAIjB,cAAJ,CAAoBiB,IAAIlB,OAAJ,EAApB,EAAoCU,IAApC,CAAyC,UAACC,GAAD,EAAS;AAChD,QAAIe,OAAO,EAAX;AACA,QAAIC,SAAShB,IAAIgB,MAAjB;;AAEA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,MAApB,EAA4B,EAAEC,CAA9B,EAAiC;AAC/B,UAAIC,UAAUR,mBAAmBV,IAAIiB,CAAJ,EAAOE,SAAP,CAAiB5B,GAApC,GAA0C,kCAA1C,GAA+E,EAA7F;;AAEAwB,4CAEMG,OAFN,6BAGelB,IAAIiB,CAAJ,EAAOE,SAAP,CAAiB5B,GAHhC,UAGwCS,IAAIiB,CAAJ,EAAOE,SAAP,CAAiB5B,GAHzD;AAKD;;AAEDwB,qBAAeA,IAAf;;AAEAP,aAASY,IAAT,CAAcC,SAAd,GAA0BN,IAA1B;AACD,GAjBD,EAkBCV,KAlBD,CAkBO,UAACC,GAAD,EAAS;AACdgB,UAAMhB,GAAN;AACD,GApBD;;AAuBAE,WAASC,gBAAT,CAA0B,OAA1B,EAAmC,UAACc,KAAD,EAAW;AAC5C,QAAIA,MAAMC,MAAN,CAAaC,QAAb,KAA0B,GAA9B,EAAmC;AACjCF,YAAMG,cAAN;AACAf,mBAAagB,OAAb,CAAqB,SAArB,EAAgCJ,MAAMC,MAAN,CAAaI,IAA7C;AACD;AACF,GALD;AAMD,CAlCD","file":"public/app.js","sourcesContent":["// let Config = require('./config/config')\n// config = new Config()\n\n// let wut = null\n\n// wut = config.getDataFromURL(Config.webstandards)\n//   .then(result => result)\n//   .catch(err => err)\n\n\n// module.exports = Config","let axios = require('axios')\n\nmodule.exports = new Config()\n\nfunction Config() {\n  this._webstandards = 'http://feeds.soundcloud.com/users/soundcloud:users:202737209/sounds.rss'\n  this._YqlAPI = 'https://query.yahooapis.com/v1/public/yql?q='\n}\n\nConfig.prototype.getLink = function() {\n  return this._webstandards\n}\n\nConfig.prototype.getDataFromURL = function(url) {\n  return new Promise((resolve, reject) => {\n    let yqlQuery = `select enclosure from rss where url=\"${url}\"`\n    let proxy_url = `${this._YqlAPI}${encodeURIComponent(yqlQuery)}&format=json&diagnostics=false&callback=`\n\n    axios.get(proxy_url)\n    .then((res) => {\n      resolve(res.data.query.results.item)\n    })\n    .catch((err) => {\n      reject(err)\n    })\n  })\n}","let wut = require('./config/config')\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let currentPodcast = localStorage.getItem('current') || null\n\n  console.log('Initialized app')\n\n  wut.getDataFromURL( wut.getLink() ).then((res) => {\n    let html = ''\n    let length = res.length\n\n    for (let i = 0; i < length; ++i) {\n      let current = currentPodcast === res[i].enclosure.url ? '<span style=\"color:red\">X</span>' : ''\n\n      html += `\n        <p>\n          ${current}\n          <a href=\"${res[i].enclosure.url}\">${res[i].enclosure.url}</a>\n        </p>`\n    }\n\n    html = `<div>${html}</div>`\n\n    document.body.innerHTML = html\n  })\n  .catch((err) => {\n    alert(err)\n  })\n\n\n  document.addEventListener('click', (event) => {\n    if (event.target.nodeName === 'A') {\n      event.preventDefault()\n      localStorage.setItem('current', event.target.href)\n    }\n  })\n});\n"]}